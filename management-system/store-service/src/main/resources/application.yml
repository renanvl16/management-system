# Store Service Configuration
spring:
  application:
    name: store-service
  
  profiles:
    active: local
    
  # Kafka Configuration (for all profiles)
  kafka:
    bootstrap-servers: kafka:29092
    producer:
      client-id: ${spring.application.name}-producer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
      max-in-flight-requests-per-connection: 5
      compression-type: snappy
    
  # Database Configuration
  datasource:
    url: jdbc:postgresql://postgres:5432/inventory_db
    driver-class-name: org.postgresql.Driver
    username: inventory_user
    password: inventory_password
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
  
  # JPA Configuration  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    table: flyway_schema_history
    validate-on-migrate: false

---
# Production Profile Configuration
spring:
  config:
    activate:
      on-profile: production
      
  # Database Configuration for Production
  datasource:
    url: jdbc:postgresql://postgres:5432/inventory_db
    driver-class-name: org.postgresql.Driver
    username: inventory_user
    password: inventory_password
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration for Production
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        
  # H2 Console disabled in production
  h2:
    console:
      enabled: false
      
  # Kafka Configuration
  kafka:
    bootstrap-servers: kafka:29092
    producer:
      client-id: ${spring.application.name}-producer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      # Configurações de resiliência
      request-timeout-ms: 30000
      delivery-timeout-ms: 120000
      max-in-flight-requests-per-connection: 5
      compression-type: snappy
      
  # Redis Configuration
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:inventorypass123}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      central-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 45000ms
        sliding-window-size: 8
        minimum-number-of-calls: 4
        slow-call-rate-threshold: 75
        slow-call-duration-threshold: 4000ms
        permitted-number-of-calls-in-half-open-state: 3
      local-database:
        failure-rate-threshold: 40
        wait-duration-in-open-state: 90000ms
        sliding-window-size: 15
        minimum-number-of-calls: 8
        slow-call-rate-threshold: 60
        slow-call-duration-threshold: 6000ms
        permitted-number-of-calls-in-half-open-state: 4
      redis:
        failure-rate-threshold: 80
        wait-duration-in-open-state: 30000ms
        sliding-window-size: 10
        minimum-number-of-calls: 3
        slow-call-rate-threshold: 90
        slow-call-duration-threshold: 2000ms
        permitted-number-of-calls-in-half-open-state: 2
      kafka-publisher:
        failure-rate-threshold: 65
        wait-duration-in-open-state: 25000ms
        sliding-window-size: 12
        minimum-number-of-calls: 6
        slow-call-rate-threshold: 85
        slow-call-duration-threshold: 3000ms
        permitted-number-of-calls-in-half-open-state: 3

# Server Configuration
server:
  port: 8081

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
app:
  store:
    id: ${STORE_ID:STORE-001}
  kafka:
    topics:
      inventory-update: inventory-update
  # Configurações de Resiliência
  resilience:
    kafka:
      retry:
        max-attempts: 5
        initial-delay: 1000
        max-delay: 30000
        multiplier: 2.0
      dlq:
        enabled: true
        max-retries: 10
      circuit-breaker:
        enabled: true
        failure-threshold: 5
        timeout: 60000

# Logging Configuration
logging:
  level:
    com.inventory.management: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{50} - %msg%n"

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
