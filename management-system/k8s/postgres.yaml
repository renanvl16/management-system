apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: inventory-system
data:
  POSTGRES_DB: "inventorydb"
  POSTGRES_USER: "inventory"
  POSTGRES_PASSWORD: "inventory123"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: inventory-system
  labels:
    app: postgres
    component: database
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        component: database
    spec:
      automountServiceAccountToken: false
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - name: postgres
          containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "2Gi"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - inventory
            - -d
            - inventorydb
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - inventory
            - -d
            - inventorydb
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: postgres-init
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: inventory-system
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  selector:
    app: postgres

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: inventory-system
data:
  init.sql: |
    -- Create schemas
    CREATE SCHEMA IF NOT EXISTS store_service;
    CREATE SCHEMA IF NOT EXISTS central_inventory;
    
    -- Grant permissions
    GRANT ALL PRIVILEGES ON SCHEMA store_service TO inventory;
    GRANT ALL PRIVILEGES ON SCHEMA central_inventory TO inventory;
